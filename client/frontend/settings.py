"""
Django settings for frontend project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
import locale

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-your-secret-key-here'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # Cho phép tất cả các host trong development


# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',  # Disabled - requires sessions
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',  # Re-enabled for messages support
    'django.contrib.messages',  # Re-enabled for messages support
    'django.contrib.staticfiles',
    'app',
    'corsheaders',  # Thêm corsheaders
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # Re-enabled for messages support
    'corsheaders.middleware.CorsMiddleware',  # Thêm CorsMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',  # Disabled - using custom auth
    'django.contrib.messages.middleware.MessageMiddleware',  # Re-enabled for messages support
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'app.middleware.TokenAuthMiddleware',  # Token authentication middleware
    # 'app.middleware.AuthContextMiddleware',  # Replaced by context processor
]

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True  # Cho phép tất cả các origin trong môi trường development
CORS_ALLOW_CREDENTIALS = True  # Cho phép gửi credentials (cookies, headers, etc.)

ROOT_URLCONF = 'frontend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'app/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'app.context_processors.global_context',  # Global context processor for categories
                'app.context_processors.auth_context',  # Custom auth context processor
            ],
            'libraries': {
                'custom_filters': 'app.templatetags.custom_filters',
                'cart_tags': 'app.templatetags.cart_tags',
            }
        },
    },
]

WSGI_APPLICATION = 'frontend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'vi'

TIME_ZONE = 'Asia/Ho_Chi_Minh'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'app/static'),
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'app/media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Cache configuration
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'TIMEOUT': 300,  # 5 minutes default timeout
        'OPTIONS': {
            'MAX_ENTRIES': 1000,
            'CULL_FREQUENCY': 3,
        }
    }
}

# Cache timeouts for different data types
CACHE_TIMEOUTS = {
    'categories': 600,  # 10 minutes - categories don't change often
    'brands': 600,      # 10 minutes - brands don't change often
    'products': 300,    # 5 minutes - products may change more frequently
    'user_data': 60,    # 1 minute - user data may change
}

# Locale settings
try:
    locale.setlocale(locale.LC_ALL, 'vi_VN.UTF-8')
except:
    locale.setlocale(locale.LC_ALL, '')
